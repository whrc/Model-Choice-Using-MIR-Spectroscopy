oc <- read.csv("C:/Users/sdangal/Documents/ModelChoice_17SEPT2018/newResults/uncertainty/oc.500.csv")
###combine all into one single file
oc.500 <- oc[row.index.oc, ]
##plot spectral outliers using both udev and f-ratio
x <- 1:500
oc.500$pls.reld <- oc.500$pls.udev/oc.500$pls.pred
avg <- oc.500$pls.pred
udev <- oc.500$pls.udev
rd <- round(mean(oc.500$pls.reld),2)
avg.outl <- oc.500$pls.pred[oc.500$pls.reld > 0.557]
udev.outl <- oc.500$pls.udev[oc.500$pls.reld > 0.557]
ind <- which(oc.500$pls.pred %in% avg.outl)
ind
###combine all into one single file
oc.500 <- pls.oc[row.index.oc, ]
str(oc.500)
oc.500$pls.reld <- oc.500$udev/oc.500$pred
avg <- oc.500$pls.pred
udev <- oc.500$pls.udev
rd <- round(mean(oc.500$pls.reld),2)
avg.outl <- oc.500$pls.pred[oc.500$pls.reld > 0.557]
udev.outl <- oc.500$pls.udev[oc.500$pls.reld > 0.557]
ind <- which(oc.500$pls.pred %in% avg.outl)
ind
avg
avg <- oc.500$pred
udev <- oc.500$udev
rd <- round(mean(oc.500$pls.reld),2)
avg.outl <- oc.500$pls.pred[oc.500$pls.reld > 0.557]
udev.outl <- oc.500$pls.udev[oc.500$pls.reld > 0.557]
ind <- which(oc.500$pls.pred %in% avg.outl)
udev
ind
avg.outl <- oc.500$pred[oc.500$pls.reld > 0.557]
udev.outl <- oc.500$udev[oc.500$pls.reld > 0.557]
ind <- which(oc.500$pred %in% avg.outl)
ind
avg.outl
outl.df <- oc.500[oc.500$pls.reld > 0.557,]
head(outl.df)
dim(oc.500)
length(ind)
##plot spectral outliers using both udev and f-ratio
x <- 1:500
oc.500$pls.reld <- oc.500$udev/oc.500$pred
avg <- oc.500$pred
udev <- oc.500$udev
rd <- round(mean(oc.500$pls.reld),2)
avg.outl <- oc.500$pred[oc.500$pls.reld > 0.557]
udev.outl <- oc.500$udev[oc.500$pls.reld > 0.557]
outl.df <- oc.500[oc.500$pls.reld > 0.557,]
ind <- which(oc.500$pred %in% avg.outl)
head(outl.df)
lenth(avg.outl)
length(avg.outl)
dim(oc.500)
outl.df <- oc.500[oc.500$pls.reld > 0.557,]
outl.df
rows(outl.df)
row.names(outl.df)
outl.df$obs
oc.lab.valid.trun[4686]
hea(oc.500)
head(oc.500)
##Get all spc and scores for outliers
ok.flag.scores <- ok.valid.scores[ind,]
plot(pca$x)
points(pca$x[rows,1], pca$x[rows,2], col="blue", pch=16)
points(pca$x[rows.valid,1], pca$x[rows.valid,2], col="red", pch=16)
plot(pca$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca$x[rows,1], pca$x[rows,2], col="blue", pch=16)
points(pca$x[rows.valid,1], pca$x[rows.valid,2], col="red", pch=16)
rows.calib <- rows[rows <= 34122]
plot(pca$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca$x[rows.calib,1], pca$x[rows.calib,2], col="blue", pch=16)
points(pca$x[rows.valid,1], pca$x[rows.valid,2], col="red", pch=16)
ok.valid <- ok[34123:nrow(sample.fratio)]
ok.valid <- ok[34123:length(sample.fratio)]
length(ok.valid)
ok.valid <- ok[34123:nrow(spc)]
ok.valid.fratio <- ok.valid[-rows.na]
str(ok.valid.fratio)
plot(pca$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca$x[rows.calib,1], pca$x[rows.calib,2], col="blue", pch=16)  ##calib outliers
points(ok.valid.scores.trun[ok.valid.fratio>0.99,1],ok.valid.scores.trun[ok.valid.fratio>0.99,2], col="green", pch=16)
length(ok.valid.scores.trun[ok.valid.fratio>0.99,1])
tmp.fratio.flag <- ok.valid.scores.trun[ok.valid.fratio>0.99,1]
tmp.fratio.flag
points(ok.valid.scores.trun[ind,1],ok.valid.scores.trun[ind,2], col="red", pch=16) ##udev outliers
ind
str(ok.flag.scores)
plot(pca$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca$x[rows.calib,1], pca$x[rows.calib,2], col="blue", pch=16)  ##calib outliers
points(ok.valid.scores.trun[ok.valid.fratio>0.99,1],ok.valid.scores.trun[ok.valid.fratio>0.99,2], col="green", pch=16)
points(ok.flag.scores[,1],ok.flag.scores[,2], col="red", pch=16) ##udev outliers
ok.flag.fratio.scores <- ok.valid.scores[ok.valid.fratio>0.00,]
plot(pca$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca$x[rows.calib,1], pca$x[rows.calib,2], col="blue", pch=16)  ##calib outliers
points(ok.flag.fratio.scores[,1],ok.flag.fratio.scores[,2], col="green", pch=16)
ok.flag.fratio.scores <- ok.valid.scores[ok.valid.fratio>0.99,]
plot(pca$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca$x[rows.calib,1], pca$x[rows.calib,2], col="blue", pch=16)  ##calib outliers
points(ok.flag.fratio.scores[,1],ok.flag.fratio.scores[,2], col="green", pch=16)
points(ok.flag.scores[,1],ok.flag.scores[,2], col="red", pch=16) ##udev outliers
plot(pca$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca$x[rows.calib,1], pca$x[rows.calib,2], col="blue", pch=16,xlim = c(-25,30), ylim = c(-15,15))  ##calib outliers
points(ok.flag.fratio.scores[,1],ok.flag.fratio.scores[,2], col="green", pch=16,xlim = c(-25,30), ylim = c(-15,15))
points(ok.flag.scores[,1],ok.flag.scores[,2], col="red", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
ind
str(ok.valid.scores)
##Get all spc and scores for outliers
ok.flag.scores <- ok.valid.scores[row.index.oc,]
length(row.index.oc)
##Get all spc and scores for outliers
flag.udev.scores <- ok.valid.scores[row.index.oc,]
flag.fratio.scores <- ok.valid.scores[row.index.oc,]
flagged.udev <- flag.udev.scores[ind,]
str(flagged.udev)
flagged.fratio <- flag.fratio.scores[flagged.fratio.scores>0.99,]
str(ok.valid.fratio)
str(ok.valid.fratio)
##index for fratio
fratio.500 <- ok.valid.fratio[row.index.oc]
str(flag.udev.scores)
ind.fratio <- which(fratio.500 > 0.99)
ind.fratio
ind
##Get all spc and scores for outliers
flag.udev.scores <- ok.valid.scores[row.index.oc,]
flag.fratio.scores <- ok.valid.scores[row.index.oc,]
flagged.udev <- flag.udev.scores[ind,]
flagged.fratio <- flag.fratio.scores[ind.fratio,]
plot(pca$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca$x[rows.calib,1], pca$x[rows.calib,2], col="blue", pch=16,xlim = c(-25,30), ylim = c(-15,15))  ##calib outliers
str(fratio.500)
str(flagged.udev)
str(flagged.fratio)
points(flagged.fratio[,1], flagged.fratio[,2],col="green", pch=16,xlim = c(-25,30), ylim = c(-15,15))
points(flagged.udev[,1],flagged.udev[,2], col="red", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
#track row index with fprob higher than 0.99
rows <- which(ok>0.99)
rows.calib <- rows[rows <= 34122]
rows.valid <- rows[rows>34122]
plot(pca$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca$x[rows.calib,1], pca$x[rows.calib,2], col="blue", pch=16)
points(pca$x[rows.valid,1], pca$x[rows.valid,2], col="red", pch=16)
######################
## compare with udeviation outlier for validation sets
pls.oc <- read.csv("C:/Users/sdangal/Documents/ModelChoice_17SEPT2018/newResults/uncertainty/pls.pred.oc.csv")
###remove na samples from OC
rows.na <- read.csv("C:/Users/sdangal/Documents/ModelChoice_17SEPT2018/newResults/uncertainty/nasamplesoc.csv")
rows.na <- rows.na[,2]
pls.oc <- pls.oc[-rows.na,]
ok.valid <- ok[34123:nrow(spc)]
ok.valid.fratio <- ok.valid[-rows.na]
ok.valid.scores <- pca$x[34123:nrow(spc),]
ok.valid.scores.trun <- ok.valid.scores[-rows.na,]
##get 500 samples
set.seed(1000)
#select rows randomly 500
#for OC
row.index.oc <- sample(nrow(sbl.oc), 500)
###combine all into one single file
oc.500 <- pls.oc[row.index.oc, ]
scores.500 <- ok.valid.scores.trun[row.index.oc,]
fratio.500 <- ok.valid.fratio[row.index.oc,]
fratio.500 <- ok.valid.fratio[row.index.oc]
length(fratio.500)
udev.500 <- oc.500$udev
##outliers
fratio.outl.scores <- scores.500[fratio.500>0.99,]
udev.outl.scores <- scores.500[udev.500 > 0.557,]
##plot
plot(pca$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca$x[rows.calib,1], pca$x[rows.calib,2], col="blue", pch=16,xlim = c(-25,30), ylim = c(-15,15))  ##calib outliers
points(fratio.outl.scores[,1], fratio.outl.scores[,2],col="green", pch=16,xlim = c(-25,30), ylim = c(-15,15))
points(udev.outl.scores[,1],udev.outl.scores[,2], col="red", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
#track row index with fprob higher than 0.99
rows <- which(ok>0.99)
load("C:/Users/sdangal/Documents/ModelChoice_17SEPT2018/Fratio/spc.recons.oc.RData")
load("C:/Users/sdangal/Documents/ModelChoice_17SEPT2018/full_data_trun6000/sub.calib.oc.RData")
load("C:/Users/sdangal/Documents/ModelChoice_17SEPT2018/full_data_trun6000/sub.valid.oc.RData")
spc <- rbind(sub.calib.oc$spc, sub.valid.oc$spc) #calib = 1:34122, valid = 34133:42673
spc.orig.oc <- scale(spc, scale=FALSE)
spc.res <- (spc.recons.oc - spc.orig.oc)^2
spc.res <- sqrt(rowSums(spc.res))
for(i in 1:length(spc.res)){
sample.fratio <- (length(spc.res)-1) * spc.res^2/sum((spc.res[-i])^2)
}
ok <- pf(sample.fratio, 1, length(spc.res))
#track row index with fprob higher than 0.99
rows <- which(ok>0.99)
rows.calib <- rows[rows <= 34122]
rows.valid <- rows[rows>34122]
plot(pca$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca$x[rows.calib,1], pca$x[rows.calib,2], col="blue", pch=16)
load("C:/Users/sdangal/Documents/ModelChoice_17SEPT2018/Fratio/pca.oc.RData")
points(pca.oc$x[rows.calib,1], pca.oc$x[rows.calib,2], col="blue", pch=16)
plot(pca.oc$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca.oc$x[rows.calib,1], pca.oc$x[rows.calib,2], col="blue", pch=16)
points(pca.oc$x[rows.valid,1], pca.oc$x[rows.valid,2], col="red", pch=16)
######################
## compare with udeviation outlier for validation sets
pls.oc <- read.csv("C:/Users/sdangal/Documents/ModelChoice_17SEPT2018/newResults/uncertainty/pls.pred.oc.csv")
###remove na samples from OC
rows.na <- read.csv("C:/Users/sdangal/Documents/ModelChoice_17SEPT2018/newResults/uncertainty/nasamplesoc.csv")
rows.na <- rows.na[,2]
pls.oc <- pls.oc[-rows.na,]
ok.valid <- ok[34123:nrow(spc)]
ok.valid.fratio <- ok.valid[-rows.na]
ok.valid.scores <- pca$x[34123:nrow(spc),]
ok.valid.scores.trun <- ok.valid.scores[-rows.na,]
##get 500 samples
set.seed(1000)
#select rows randomly 500
#for OC
row.index.oc <- sample(nrow(sbl.oc), 500)
###combine all into one single file
oc.500 <- pls.oc[row.index.oc, ]
scores.500 <- ok.valid.scores.trun[row.index.oc,]
fratio.500 <- ok.valid.fratio[row.index.oc]
###remove na samples from OC
rows.na <- read.csv("C:/Users/sdangal/Documents/ModelChoice_17SEPT2018/newResults/uncertainty/nasamplesoc.csv")
rows.na <- rows.na[,2]
pls.oc <- pls.oc[-rows.na,]
ok.valid <- ok[34123:nrow(spc)]
ok.valid.fratio <- ok.valid[-rows.na]
ok.valid.scores <- pca$x[34123:nrow(spc),]
ok.valid.scores <- pca.oc$x[34123:nrow(spc),]
ok.valid.scores.trun <- ok.valid.scores[-rows.na,]
##get 500 samples
set.seed(1000)
#select rows randomly 500
#for OC
row.index.oc <- sample(nrow(sbl.oc), 500)
#select rows randomly 500
#for OC
row.index.oc <- sample(nrow(pls.oc), 500)
###combine all into one single file
oc.500 <- pls.oc[row.index.oc, ]
scores.500 <- ok.valid.scores.trun[row.index.oc,]
fratio.500 <- ok.valid.fratio[row.index.oc]
udev.500 <- oc.500$udev
##outliers
fratio.outl.scores <- scores.500[fratio.500>0.99,]
udev.outl.scores <- scores.500[udev.500 > 0.557,]
##plot
plot(pca$x, xlim = c(-25,30), ylim = c(-15,15))
##plot
plot(pca.oc$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca.oc$x[rows.calib,1], pca.oc$x[rows.calib,2], col="blue", pch=16)##calib
points(pca.oc$x[rows.valid,1], pca.oc$x[rows.valid,2], col="red", pch=16)##valid
points(fratio.outl.scores[,1], fratio.outl.scores[,2],col="green", pch=16) ##valid on 500 samples
points(udev.outl.scores[,1],udev.outl.scores[,2], col="yellow", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
str(fratio.outl.scores)
pls.oc <- read.csv("C:/Users/sdangal/Documents/ModelChoice_17SEPT2018/newResults/uncertainty/pls.pred.oc.csv")
dim(pls.oc)
dim(valid.scores)
valid.scores <- ok[34123:nrow(spc)]
str(valid.scores)
valid.scores <- scores[34123:nrow(spc),]
scores <- pca.oc$x
str(scores)
valid.scores <- scores[34123:nrow(spc),]
str(valid.scores)
pls.oc$reld <- pls.oc$udev / pls.oc$pred
str(pls.oc)
index.udev <- which(pls.oc$reld>0.557)
index.udev
plot(valid.scores)
points(valid.scores[index.udev,], col="blue")
pls.oc$fratio <- ok
str(ok)
pls.oc$fratio <- ok[34123:nrow(spc)]
index.fratio <- which(pls.oc$fratio>0.99)
#plot(valid.scores)
#points(valid.scores[index.udev,], col="blue")
plot(pca.oc$x, xlim = c(-25,30), ylim = c(-15,15))
points(valid.scores, col="blue", pch=16)##calib
#plot(valid.scores)
#points(valid.scores[index.udev,], col="blue")
plot(pca.oc$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca.oc[rows,], col="blue", pch=16)##calib
points(pca.oc[rows,1],pca.oc[rows,2] col="blue", pch=16)##calib
points(pca.oc[rows,1],pca.oc[rows,2], col="blue", pch=16)##calib
str(pca.oc)
points(pca.oc$x[rows,] col="blue", pch=16)##calib
points(pca.oc$x[rows,], col="blue", pch=16)##calib
points(valid.scores[index.fratio,],col="green", pch=16) ##valid on 500 samples
points(valid.scores[index.udev,], col="yellow", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
quantile(pls.oc$reld,0.95)
quantile(pls.oc$reld,0.99)
udev.outl.scores <- scores.500[udev.500 > 1.51,]
index.udev <- which(pls.oc$reld>1.51)
index.fratio <- which(pls.oc$fratio>0.99)
#plot(valid.scores)
#points(valid.scores[index.udev,], col="blue")
plot(pca.oc$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca.oc$x[rows,], col="blue", pch=16)##calib
points(valid.scores[index.fratio,],col="green", pch=16) ##valid on 500 samples
points(valid.scores[index.udev,], col="yellow", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
test <- pls.oc[pls.oc$reld > 1.51,]
str(test)
test$reld
quantile(pls.oc$reld, 0.995)
index.udev <- which(pls.oc$reld>3.02)
length(index.udev)
#plot(valid.scores)
#points(valid.scores[index.udev,], col="blue")
plot(pca.oc$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca.oc$x[rows,], col="blue", pch=16)##calib
points(valid.scores[index.fratio,],col="green", pch=16) ##valid on 500 samples
points(valid.scores[index.udev,], col="yellow", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
quantile(pls.oc$reld, 0.999)
valid.scores <- scores[34123:nrow(spc),]  #for plotting validation sets only
pls.oc <- read.csv("C:/Users/sdangal/Documents/ModelChoice_17SEPT2018/newResults/uncertainty/pls.pred.oc.csv")
pls.oc$reld <- pls.oc$udev / pls.oc$pred
pls.oc$fratio <- ok[34123:nrow(spc)]
index.udev <- which(pls.oc$reld>8.29)
index.fratio <- which(pls.oc$fratio>0.99)
#plot(valid.scores)
#points(valid.scores[index.udev,], col="blue")
plot(pca.oc$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca.oc$x[rows,], col="blue", pch=16)##calib
points(valid.scores[index.fratio,],col="green", pch=16) ##valid on 500 samples
points(valid.scores[index.udev,], col="yellow", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
######################
## compare with udeviation outlier for validation sets
pls.oc <- read.csv("C:/Users/sdangal/Documents/ModelChoice_17SEPT2018/newResults/uncertainty/pls.pred.oc.csv")
OutVals = boxplot(pls.oc)$reld
OutVals = boxplot(pls.oc$reld)
OutVals = boxplot(pls.oc$reld)
OutVals = boxplot(pls.oc)$reld
OutVals
?pd
##plot only validation
plot(pca.oc$x[rows,])##valid
rows
##plot only validation
plot(valid.scores)##valid
points(valid.scores[index.fratio,],col="green", pch=16) ##valid on 500 samples
points(valid.scores[index.udev,], col="yellow", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
##plot only validation
plot(valid.scores)##valid
ok <- pf(pls.oc$reld, 1, nrow(valid.scores))
nrow(valid.scores)
str(pls.oc)
ok <- pf(pls.oc$reld, 1, nrow(valid.scores))
pls.oc$reld <- pls.oc$udev / pls.oc$pred
pls.oc$fratio <- ok[34123:nrow(spc)]
index.udev <- which(pls.oc$reld>8.29)
index.fratio <- which(pls.oc$fratio>0.99)
#plot(valid.scores)
#points(valid.scores[index.udev,], col="blue")
plot(pca.oc$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca.oc$x[rows,], col="blue", pch=16)##valid
points(valid.scores[index.fratio,],col="green", pch=16) ##valid on 500 samples
points(valid.scores[index.udev,], col="yellow", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
ok <- pf(pls.oc$reld, 1, nrow(valid.scores))
str(ok)
quantile(ok,0.95)
temp <- ok[ok>0.544]
length(temp)
plot(valid.scores)##valid
points(valid.scores[index.fratio,],col="green", pch=16) ##valid on 500 samples
index.pf <- which(index.fratio>0.544)
points(valid.scores[index.pf,], col="yellow", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
#plot(valid.scores)
#points(valid.scores[index.udev,], col="blue")
plot(pca.oc$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca.oc$x[rows,], col="blue", pch=16)##valid
points(valid.scores[index.fratio,],col="green", pch=16) ##valid on 500 samples
points(valid.scores[index.udev,], col="yellow", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
str(pls.oc$reld)
sd(pls.oc$reld)
mean(pls.oc$reld)
pls.oc$reld <- pls.oc$udev / pls.oc$pred
pls.oc$fratio <- ok[34123:nrow(spc)]
index.udev <- which(pls.oc$reld>2.676)
index.fratio <- which(pls.oc$fratio>0.99)
#plot(valid.scores)
#points(valid.scores[index.udev,], col="blue")
plot(pca.oc$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca.oc$x[rows,], col="blue", pch=16)##valid
points(valid.scores[index.fratio,],col="green", pch=16) ##valid on 500 samples
valid.scores <- scores[34123:nrow(spc),]  #for plotting validation sets only
pls.oc <- read.csv("C:/Users/sdangal/Documents/ModelChoice_17SEPT2018/newResults/uncertainty/pls.pred.oc.csv")
pls.oc$reld <- pls.oc$udev / pls.oc$pred
pls.oc$fratio <- ok[34123:nrow(spc)]
index.udev <- which(pls.oc$reld>2.676)
index.fratio <- which(pls.oc$fratio>0.99)
#plot(valid.scores)
#points(valid.scores[index.udev,], col="blue")
plot(pca.oc$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca.oc$x[rows,], col="blue", pch=16)##valid
points(valid.scores[index.fratio,],col="green", pch=16) ##valid on 500 samples
index.fratio
pls.oc$fratio <- ok[34123:nrow(spc)]
head(pls.oc)
str(ok)
ok <- pf(sample.fratio, 1, length(spc.res))
valid.scores <- scores[34123:nrow(spc),]  #for plotting validation sets only
pls.oc <- read.csv("C:/Users/sdangal/Documents/ModelChoice_17SEPT2018/newResults/uncertainty/pls.pred.oc.csv")
pls.oc$reld <- pls.oc$udev / pls.oc$pred
pls.oc$fratio <- ok[34123:nrow(spc)]
index.udev <- which(pls.oc$reld>2.676)
index.fratio <- which(pls.oc$fratio>0.99)
#plot(valid.scores)
#points(valid.scores[index.udev,], col="blue")
plot(pca.oc$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca.oc$x[rows,], col="blue", pch=16)##valid
points(valid.scores[index.fratio,],col="green", pch=16) ##valid on 500 samples
points(valid.scores[index.udev,], col="yellow", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
quantile(pls.oc$reld, 0.99)
quantile(pls.oc$reld, 0.999)
quantile(pls.oc$reld, 0.995)
index.udev <- which(pls.oc$reld>3.02)
#plot(valid.scores)
#points(valid.scores[index.udev,], col="blue")
plot(pca.oc$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca.oc$x[rows,], col="blue", pch=16)##valid
points(valid.scores[index.fratio,],col="green", pch=16) ##valid on 500 samples
points(valid.scores[index.udev,], col="yellow", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
#plot(valid.scores)
#points(valid.scores[index.udev,], col="blue")
plot(pca.oc$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca.oc$x[rows,], col="blue", pch=16)##valid
points(valid.scores[index.fratio,],col="green", pch=16) ##valid on 500 samples
points(valid.scores[index.udev,], col="yellow", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
##plot only validation
plot(valid.scores)##valid
points(valid.scores[index.fratio,],col="green", pch=16) ##valid on 500 samples
points(valid.scores[index.udev,], col="yellow", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
index.udev
which(max(pls.oc$reld))
which(pls.oc$reld == max(pls.oc$reld))
pls.oc$reld[index.udev]
pls.oc$fratio[index.udev]
index.fratio <- which(pls.oc$fratio>0.95)
#plot(valid.scores)
#points(valid.scores[index.udev,], col="blue")
plot(pca.oc$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca.oc$x[rows,], col="blue", pch=16)##valid
points(valid.scores[index.fratio,],col="green", pch=16) ##valid on 500 samples
points(valid.scores[index.udev,], col="yellow", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
#plot(valid.scores)
#points(valid.scores[index.udev,], col="blue")
plot(pca.oc$x, xlim = c(-25,30), ylim = c(-15,15))
points(pca.oc$x[rows,], col="blue", pch=16)##valid
points(valid.scores[index.fratio,],col="green", pch=16) ##valid on 500 samples
points(valid.scores[index.udev,], col="yellow", pch=16,xlim = c(-25,30), ylim = c(-15,15)) ##udev outliers
library(raster)
area.km2 <- raster("Y:/sdangal/DayCent/cropped_mask/mask/area_km2.tif")
files <- list.files("/mnt/WHRC/sdangal/DayCent/test_clm/prcp", pattern = paste0(year), full.names=TRUE)
year <- 1978
files <- list.files("/mnt/WHRC/sdangal/DayCent/test_clm/prcp", pattern = paste0(year), full.names=TRUE)
files
files <- list.files("Y:/sdangal/DayCent/test_clm/prcp", pattern = paste0(year), full.names=TRUE)
files
?substr
tmp <- strsplit(files, "/")[[1]][8]
tmp
tmp <- strsplit(files, "/")[[1]][6]
tmp
tmp <- substr(tmp, 1,11)
tmp
tmp <- strsplit(files, "/")[[2]][6]
tmp
for(year in 1978:1982){
files <- list.files("Y:/sdangal/DayCent/test_clm/prcp", pattern = paste0(year), full.names=TRUE)
for(i in 1:length(files)){
ok <- strsplit(files, "/")[[i]][6]
ok <- substr(tmp, 1,11)
tmp <- raster(files[i]) * area.km2
tmp1 <- cellStats(tmp, sum) / cellStats(area.km2, sum)
cat(ok, tmp1, "\n")
}
}
tmp <- strsplit(files, "/")[[i]][6]
tmp
length(files)
ok <- strsplit(files, "/")[6]
ok
ok <- strsplit(files, "/")[[6]]
ok
files
ok <- strsplit(files[1], "/")[[6]]
ok <- strsplit(files[1], "/")[[1]][6]
ok
ok <- strsplit(files[1], "/")[[2]][6]
ok <- strsplit(files[2], "/")[[1]][6]
ok
for(year in 1978:1982){
files <- list.files("Y:/sdangal/DayCent/test_clm/prcp", pattern = paste0(year), full.names=TRUE)
for(i in 1:length(files)){
ok <- strsplit(files[i], "/")[[1]][6]
ok <- substr(tmp, 1,11)
tmp <- raster(files[i]) * area.km2
tmp1 <- cellStats(tmp, sum) / cellStats(area.km2, sum)
cat(ok, tmp1, "\n")
}
}
for(year in 1978:1982){
files <- list.files("Y:/sdangal/DayCent/test_clm/prcp", pattern = paste0(year), full.names=TRUE)
for(i in 1:length(files)){
ok <- strsplit(files[i], "/")[[1]][6]
ok <- substr(ok, 1,11)
tmp <- raster(files[i]) * area.km2
tmp1 <- cellStats(tmp, sum) / cellStats(area.km2, sum)
cat(ok, tmp1, "\n")
}
}
